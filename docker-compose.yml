version: '3.8'

services:
  vt-data-api:
    build:
      context: ./vt-data-api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_URL=postgres://vt_data_pipeline:vt_data_pipeline_password@postgres:5432/vt_data_pipeline?sslmode=disable
      - VT_API_KEY=7c155eaab2d47e2d5df8b0ee25a5c80647bd30e37ab37c43adb635b0cd6720a9
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=
      - PORT=8080
      - GIN_MODE=release
    volumes:
      - ./vt-data-api/.env:/app/.env
    networks:
      - vt-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  vt-data-refresh:
    build:
      context: ./vt-data-refresh
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      vt-data-api:
        condition: service_healthy
    environment:
      - DB_URL=postgres://vt_data_pipeline:vt_data_pipeline_password@postgres:5432/vt_data_pipeline?sslmode=disable
      - VT_API_KEY=7c155eaab2d47e2d5df8b0ee25a5c80647bd30e37ab37c43adb635b0cd6720a9
      - REDIS_URL=redis://redis:6379
      - REDIS_PASSWORD=
      - PORT=8081
      - GIN_MODE=release
    volumes:
      - ./vt-data-refresh/.env:/app/.env
    networks:
      - vt-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis/redis-stack:latest
    container_name: vt-data-api-redis
    ports:
      - "6379:6379" # Redis
      - "8001:8001" # RedisInsight
    volumes:
      - ~/vt-data-api/redis:/data
    environment:
      - REDIS_ARGS=--appendonly yes
    networks:
      - vt-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  postgres:
    image: postgres:15
    container_name: vt-data-api-postgres
    environment:
      POSTGRES_USER: vt_data_pipeline
      POSTGRES_PASSWORD: vt_data_pipeline_password
      POSTGRES_DB: vt_data_pipeline
    ports:
      - "5432:5432"
    volumes:
      - ~/vt-data-api/postgres:/var/lib/postgresql/data
    networks:
      - vt-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vt_data_pipeline"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    image: dpage/pgadmin4
    container_name: vt-data-api-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - vt-network

networks:
  vt-network:
    driver: bridge